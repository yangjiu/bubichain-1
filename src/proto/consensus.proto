syntax = "proto3";
package protocol;

import "common.proto";

//PBFT protocol
message PbftPrePrepare
{
	int64 view_number = 1;
	int64 sequence = 2;
	int64 replica_id = 3;
	bytes value = 4;
	bytes value_digest = 5;
}

message PbftPrepare
{
	int64 view_number = 1;
	int64 sequence = 2;
	int64 replica_id = 3;
	bytes value_digest = 4;
}

message PbftCommit
{
	int64 view_number = 1;
	int64 sequence = 2;
	int64 replica_id = 3;
	bytes value_digest = 4;
}

message PbftCheckPoint
{
	int64 sequence = 1;
	int64 replica_id = 2;
	bytes state_digest = 3;
}

message PbftPreparedSet
{
	PbftEnv pre_prepare = 1;
	repeated PbftEnv prepare = 2;
}

message PbftViewChange
{
	int64 view_number = 1; //v+1
	int64 sequence = 2;     //n
	repeated PbftEnv checkpoints = 3; //C
	repeated PbftPreparedSet prepared_set = 4;  //prepared messages large than n
	int64 replica_id = 5;
}

message PbftNewView
{
	int64 view_number = 1; //v+1
	int64 sequence = 2;     //sequence
	int64 replica_id = 3;
	repeated PbftEnv view_changes = 4;     //V
	repeated PbftEnv pre_prepares = 5;  //O
}

enum PbftMessageType {
	    PBFT_TYPE_PREPREPARE = 0;
	    PBFT_TYPE_PREPARE = 1;
	    PBFT_TYPE_COMMIT = 2;
		PBFT_TYPE_CHECKPOINT = 3;
		PBFT_TYPE_VIEWCHANGE = 4;
		PBFT_TYPE_NEWVIEW = 5;
}

enum PbftValueType {
	    PBFT_VALUE_TX = 0;
	    PBFT_VALUE_TXSET = 1;
}

message Pbft
{
	int64 round_number = 1; //for send again
	PbftMessageType type = 2;
	PbftPrePrepare pre_prepare = 3;
	PbftPrepare prepare = 4;
	PbftCommit commit = 5;
	PbftCheckPoint checkpoint = 6;
	PbftViewChange view_change = 7;
	PbftNewView new_view = 8;
}

message PbftEnv
{
 Pbft pbft = 1;
 Signature signature = 2;
}

message ValidatorSet{
	repeated string validators = 1;
}

message PbftProof
{
	repeated PbftEnv commits = 1;
}